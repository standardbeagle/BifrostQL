# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET 6.0
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Setup .NET 7.0
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Setup .NET 8.0
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore --configuration Release
    - name: Test
      run: dotnet test --no-build --verbosity normal --configuration Release
    - name: Pack
      run: dotnet pack --configuration Release --no-build -p :PackageVersion=0.3.${{ github.run_id }} -p ReleaseNotes="${{github.event.release.body}}"
    - name: add source
      run: dotnet nuget add source --username standardbeagle --password ${{secrets.REPO_NUGET}} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/standardbeagle/index.json"
    - name: publish Core to repo
      run: dotnet nuget push "src/BifrostQL.Core/bin/Release/*.nupkg" --source "github" -k ${{secrets.REPO_NUGET}} --skip-duplicate
    - name: publish Server to repo
      run: dotnet nuget push "src/BifrostQL.Server/bin/Release/*.nupkg" --source "github" -k ${{secrets.REPO_NUGET}} --skip-duplicate
    - name: Cache editor dependencies
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: npm-${{ hashFiles('./examples/edit-db/package-lock.json') }}
        restore-keys: npm-
    - name: set editor version
      working-directory: ./examples/edit-db
      run: npm version 0.3.${{ github.run_id }}
    - name: install editor
      working-directory: ./examples/edit-db
      run: npm ci 
    - name: build editor
      working-directory: ./examples/edit-db
      run: npm run build
    - name: publish npm package
      working-directory: ./examples/edit-db
      env:
        REPO_NUGET: ${{secrets.REPO_NUGET}}
      run: npm publish
