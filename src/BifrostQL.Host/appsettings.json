{
  "ConnectionStrings": {
    "bifrost": "Server=localhost;Database=MBA_Software;Trusted_Connection=True;"
  },
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "BifrostQL": {
    "Path": "/graphql",
    "Playground": "/",
    "DisableAuth": true,
    "Metadata": [
      ":root { audit-table: auditLog; audit-user-key: username; auto-join: true; de-pluralize: false; foreign-joins: false; default-limit: 100; dynamic-joins: true; soft-delete-type: date; soft-delete-column: deletedOn; }",
      ":auth { enable-auth: false; }",
      "dbo.sys*, *.__* { visibility: hidden; }",
      "dbo.*.createdOn { populate: createdOn; }",
      "dbo.*.created { populate: createdBy; }",
      "dbo.*.updatedOn { populate: updatedOn; }",
      "dbo.*.updated { populate: updatedBy; }",
      "dbo.*|has(deletedOn) { delete-type: soft }",
      "dbo.*.deletedOn { populate: deletedOn; }",
      "dbo.*.deletedBy { populate: deletedBy; }",
      "dbo.*|has(name) { label: name; }",
      "dbo.*|has(title) { label: title; }",
      "dbo.Project { label: RpcProjectId; }",
      "dbo.ClaimType { join: claims many(dbo.claim, id=claimid), projects manyToMany(dbo.Claim, id=claimTypeid, dbo.Project, projectid=id }",
      "dbo.Claim { join: claimType single(dbo.ClaimType, claimid=id), project single(dbo.Project, id=projectId) }",
      "dbo.Project { join: claims many(dbo.Claim, projectId=id), claimTypes manyToMany(dbo.Claim, projectId=id, dbo.ClaimType, claimTypeId=id) }",
      "dbo.Project { join: fkInjuryType foriegn(FK_Project_InjuryType); }"
    ]
  }
}
